(define  (domain driverlog)
  (:requirements :typing)
  (:types Driver Truck Package Location)
  (:predicates
    (Driver_fsm0_state0 ?v0 - Location ?v6 - Truck)
    (Driver_fsm0_state1 ?v1 - Truck ?v2 - Location)
    (Truck_fsm0_state0)
    (Truck_fsm0_state1 ?v0 - Location)
    (Truck_fsm0_state2)
    (Truck_fsm1_state0 ?v2 - Driver ?v4 - Location)
    (Truck_fsm1_state1)
    (Truck_fsm1_state2 ?v0 - Location ?v3 - Driver)
    (Truck_fsm2_state0)
    (Truck_fsm2_state1)
    (Truck_fsm2_state2 ?v0 - Location)
    (Truck_fsm2_state3)
    (Truck_fsm2_state4)
    (Truck_fsm3_state0 ?v1 - Location ?v6 - Driver)
    (Truck_fsm3_state1 ?v0 - Location ?v2 - Driver)
    (Package_fsm0_state0)
    (Package_fsm0_state1 ?v0 - Truck)
    (Package_fsm0_state2)
    (Location_fsm0_state0)
    (Location_fsm0_state1)
    (Location_fsm0_state2)
    (Location_fsm0_state3 ?v0 - Truck)
    (Location_fsm1_state0)
    (Location_fsm1_state1 ?v0 - Truck)
    (Location_fsm1_state2)
    (Location_fsm1_state3)
    (Location_fsm1_state4)
    (Location_fsm2_state0)
    (Location_fsm2_state1 ?v0 - Truck ?v1 - Driver)
    (Location_fsm2_state2)
    (Location_fsm3_state0 ?v2 - Driver ?v4 - Truck ?v10 - Driver ?v17 - Truck)
    (Location_fsm3_state1 ?v0 - Driver ?v1 - Truck)
  )
  (:action  disembarktruck   :parameters  (?driver1 - Driver ?truck2 - Truck ?s4 - Location )
   :precondition   (and
        (Driver_fsm0_state1 ?v1 - Truck ?v2 - Location)
        (Truck_fsm1_state2 ?v0 - Location ?v3 - Driver)
        (Truck_fsm2_state2 ?v0 - Location)
        (Truck_fsm3_state1 ?v0 - Location ?v2 - Driver)
        (Location_fsm1_state2)
   )
   :effect   (and
        (Driver_fsm0_state0 ?v0 - Location ?v6 - Truck)
        (Truck_fsm1_state0 ?v2 - Driver ?v4 - Location)
        (Truck_fsm2_state0)
        (Truck_fsm3_state0 ?v1 - Location ?v6 - Driver)
        (Location_fsm1_state3)
  ))

  (:action  boardtruck   :parameters  (?driver1 - Driver ?truck2 - Truck ?s4 - Location )
   :precondition   (and
        (Driver_fsm0_state0 ?v0 - Location ?v6 - Truck)
        (Truck_fsm0_state0)
        (Truck_fsm1_state0 ?v2 - Driver ?v4 - Location)
        (Truck_fsm3_state0 ?v1 - Location ?v6 - Driver)
        (Location_fsm2_state2)
        (Location_fsm3_state0 ?v2 - Driver ?v4 - Truck ?v10 - Driver ?v17 - Truck)
   )
   :effect   (and
        (Driver_fsm0_state1 ?v1 - Truck ?v2 - Location)
        (Truck_fsm0_state1 ?v0 - Location)
        (Truck_fsm1_state2 ?v0 - Location ?v3 - Driver)
        (Truck_fsm3_state1 ?v0 - Location ?v2 - Driver)
        (Location_fsm2_state1 ?v0 - Truck ?v1 - Driver)
        (Location_fsm3_state1 ?v0 - Driver ?v1 - Truck)
  ))

  (:action  unloadtruck   :parameters  (?package5 - Package ?truck2 - Truck ?s3 - Location )
   :precondition   (and
        (Package_fsm0_state1 ?v0 - Truck)
        (Truck_fsm1_state1)
        (Truck_fsm2_state1)
        (Truck_fsm3_state1 ?v0 - Location ?v2 - Driver)
        (Location_fsm0_state3 ?v0 - Truck)
        (Location_fsm2_state0)
        (Location_fsm3_state1 ?v0 - Driver ?v1 - Truck)
   )
   :effect   (and
        (Package_fsm0_state2)
        (Truck_fsm1_state2 ?v0 - Location ?v3 - Driver)
        (Truck_fsm2_state2 ?v0 - Location)
        (Truck_fsm3_state1 ?v0 - Location ?v2 - Driver)
        (Location_fsm0_state0)
        (Location_fsm2_state1 ?v0 - Truck ?v1 - Driver)
        (Location_fsm3_state1 ?v0 - Driver ?v1 - Truck)
  ))

  (:action  loadtruck   :parameters  (?package5 - Package ?truck2 - Truck ?s4 - Location )
   :precondition   (and
        (Package_fsm0_state0)
        (Truck_fsm0_state1 ?v0 - Location)
        (Truck_fsm2_state3)
        (Truck_fsm3_state1 ?v0 - Location ?v2 - Driver)
        (Location_fsm0_state3 ?v0 - Truck)
        (Location_fsm1_state0)
        (Location_fsm3_state1 ?v0 - Driver ?v1 - Truck)
   )
   :effect   (and
        (Package_fsm0_state1 ?v0 - Truck)
        (Truck_fsm0_state2)
        (Truck_fsm2_state4)
        (Truck_fsm3_state1 ?v0 - Location ?v2 - Driver)
        (Location_fsm0_state1)
        (Location_fsm1_state1 ?v0 - Truck)
        (Location_fsm3_state1 ?v0 - Driver ?v1 - Truck)
  ))

  (:action  drivetruck   :parameters  (?truck2 - Truck ?s4 - Location ?s1 - Location ?driver1 - Driver )
   :precondition   (and
        (Truck_fsm3_state1 ?v0 - Location ?v2 - Driver)
        (Location_fsm0_state2)
        (Location_fsm1_state1 ?v0 - Truck)
        (Location_fsm2_state1 ?v0 - Truck ?v1 - Driver)
        (Location_fsm3_state1 ?v0 - Driver ?v1 - Truck)
        (Driver_fsm0_state1 ?v1 - Truck ?v2 - Location)
   )
   :effect   (and
        (Truck_fsm3_state1 ?v0 - Location ?v2 - Driver)
        (Location_fsm0_state3 ?v0 - Truck)
        (Location_fsm1_state4)
        (Location_fsm2_state2)
        (Location_fsm3_state0 ?v2 - Driver ?v4 - Truck ?v10 - Driver ?v17 - Truck)
        (Driver_fsm0_state1 ?v1 - Truck ?v2 - Location)
  ))

)
